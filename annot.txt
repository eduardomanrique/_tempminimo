classes globais (ficarao no Mimimo$)
    ContextManager
    EvaluatorManager
pensar melhor
    html
        json
            evaluator
            container
            component > container

                
            virtualdomIterator > container
                    
            virtualdomElement
                hold the element
                    points to virtual dom, se nao é criado fora
                hold the events
                render just once
                    create browserdom
                    set non dyn attribs
                    append to parent
                        if parent not component - add to its element - else add to its parent
                    trigger create event
                insideComponent - set once
                    true if it is a html comp type ou mbody and there is a parent comp
                    if true then partOfComponet=false
                    if false then partOfComponet = false or true
                partOfComponet - set once
                    true if it is part of htmlstruct of a comp
                    if true then insideComponent=false
                    if false then insideComponent = false or true
                getComponent - set once - check just if insideComponent or partOfComponet
                    finds in parent chain till find component
                getEvaluator - create just the first exec
                    if insideComponent get the chain of component + minimo.
                    if partOfComponet get just the parentcomponent.getLocalContext
                    if not insideComponent and not partOfComponet get mimimo
                parent
                dynAttribs
                    on update minimo
                        getEvaluator().eval(script)
                            if changed from last time e.setAttribute
                child
                remove
                    remove itself and its child
                    must call remove on child first
                    trigger remove event
            virtualdomText
                hold the text
                    points to virtual dom, se nao é criado fora
                render just once
                    create browserdom
                    set text if not mscript
                    append to parent
                        if parent not component - add to its element - else add to its parent
                    trigger create event
                if(mscript){
                    insideComponent - set once
                        true if it is a html comp type ou mbody and there is a parent comp
                        if true then partOfComponet=false
                        if false then partOfComponet = false or true
                    partOfComponet - set once
                        true if it is part of htmlstruct of a comp
                        if true then insideComponent=false
                        if false then insideComponent = false or true
                    getComponent - set once - check just if insideComponent or partOfComponet
                        finds in parent chain till find component
                    getEvaluator - create just the first exec
                        if insideComponent get the chain of component + minimo.
                        if partOfComponet get just the parentcomponent.getLocalContext
                        if not insideComponent and not partOfComponet get mimimo
                    parent
                    mscript
                        on update minimo
                            getEvaluator().eval(script)
                                if changed from last time e.nodeValue=text
                    remove
                        trigger remove event
            listener
                create and remove events
                catchs the inputs, and buttons here
                binds
                    when a input has a bind is changed
                        if the dom is partOfComponet
                            ctx = evaluator.getvariablecontext
                        else
                            ctx = minimo
                        publish a message of var in ctx was changed
                logic of update variables
                    var, 
                    list,
                    detect if object or list
                    detect indexes
                    must work with inner var
                        obj.list[i].name
                            in this case must break each part  
                                obj if not exists obj={}
                                obj.list[i] if not exists obj.list = [];obj.list[i] = {}
                                obj.list[i].name = value of input
                event (function call) trigger
                    update all
                        setTimeout(updateminimo, 100)








entender pra que serve hiddenattributes e tempatributes

X.import, X.modalS retorna promise
tem que ser possivel importar via path.modal.js
eliminar o chord
X$._onScript e X$.register agora devem pegar compInfo do htmlstruct
mutation 
    href novos - capturar o link e disparar o url change event

html creator
    recursivo?
        se for recursivo, fazer com promise

ideias:
    alterar a estrutura dinamicamente quando se inserir mais nodes (via ifs e for) - virtual node
        manter o que é a estrutura original
            o que deve acontecer se um jquery alterar o elemento? altera-se a estrutura?
        ===ver o que acontece hoje quando ha uma mutation...
    assim é possivel mudar a maneira que os updates sao feito. Pode-se usar o json em vcs do browser dom
        ao criar novos if e for registrar num global

    text com script serao textnodes guardados a parte com o seu escopo
    attributes com script sera guardados a parte com o seu escopo
    template scripts serao 2 textnodes (inicio e fim) vazios para ser o ponto de insercao. Serao guardados a parte
    _outxdynattr_ removidos
=======

import
    implementar require do node?
    importando outro recurso js no padrao minimo (em vez do require) o recurso so pode ser dado como iniciado se ele chamou seu onInit() e o mesmo terminou.

onInit
    se for retornada uma promise, o onInit so é dado como terminado quando a promise terminar
    

appcache
    usar fallback para templates - testar
    para cada item que tem template e foi referenciado no cache, tem um item de fallback apontando para seu template

html
    sempre (com ou sem template) sera renderizado um html vazio.
        se for um com template
            renderiza os scripts e css link
            renderiza no body um script com o json do template e controi o html
                incluir os elementos dentro do head faltantes
                incluir os elementos dentro do body e scripts
        chama via rest o json da paginda pegando da url qual pagina é
            renderiza no ponto de insercao

steps
    url no browser ou no evento the change url onde o template da pagina é diferente da pagina atual ou se a pagina tem htmlelement
        carrega template se tiver
            o template tera o script para carregar o json e o script da pagina no target element do template
                com o uso do fallback, o template sera repetido. Ele pegara da url o caminho para fazer o load do json de pagina correto
            no oncreate de href: alterar os links para disparar o change url event
    url event e o template é o mesmo (ou ambas nao usam template?) - 
        limpar o target element
        recarregar o json e o script da pagina no target element do template


test com inner iterator

get htmx
    find js pair
    set as valid resource
    parse html
        get all bound modals data-xbind
        get all bound variables data-xmodal
        get all scripts global -> global
        get all imported -> jsonly
    compile components parse html -> coloca no json as infos dos components
    instrument controller
        html struct json
        promise for imports e modals e binds das variaveis
        expor public functions
        declare undeclared bound variables

get js only
    set as valid resource
    instrument controller
        promise for imports
        expor public functions

get global
    set as valid resource
    instrument global controller
        promise for imports
        expor public functions